#######Below is the code I used to upload data from Kaggle to mysql using python  #########
pip install mysql-connector-python pandas
import pandas as pd
from sqlalchemy import create_engine
engine = create_engine("mysql+pymysql://root:Universal12#@localhost/Painting")

######## create a list of files ######

files =['artist','canvas_size','image_link','museum_hours','museum','product_size','subject','work']

######## for loop to import all 8 files ########


for file in files:
    df = pd.read_csv(f'/path_to_your_files/{file}.csv')
    df.to_sql(file, con=engine, if_exists='replace', index=False)


####### HERE STARTS THE ACTUAL SQL WORK ##########

/* 1.Identify the museums which are open on both Sunday and Monday. Display museum name, city.*/

/*The query effectively uses a self-join to compare records within the same table, ensuring selection of museums that have opening hours on both Sunday and Monday.
/*The EXISTS operator is a strategic choice for this type of check as it focuses on existence rather than specific values, making the query more efficient.

SELECT m.name, m.city FROM museum_hours mh1
JOIN museum m
ON mh1.museum_id=m.museum_id
where day = ('Sunday')
AND exists (SELECT 1 FROM museum_hours mh2
            WHERE mh1.museum_id = mh2.museum_id
            AND mh2.day= ('Monday'));
            
            
/*2  Country and the city with the most number of museums*/

WITH CTE_country as 
         (SELECT country, count(1)
         ,rank() over(order by count(1) desc) as rnk
         FROM museum
         group by country),
     CTE_city as 
         (SELECT city, count(1)
         ,rank() over(order by count(1) desc) as rnk
	     FROM museum
         group by city)
         
select GROUP_CONCAT(distinct country) AS country,
    GROUP_CONCAT(CTE_city.city) AS city
from CTE_country
CROSS join CTE_city
where CTE_country.rnk = 1
AND CTE_city.rnk =1;



/*3 Are there museuems without any paintings?*/

select *
from museum m
LEFT JOIN work w
ON m.museum_id = w.museum_id
Where w.work_id is NULL


/*4 How many paintings have an asking price of more than their regular price */

SELECT count(*) as total
from product_size
WHERE sale_price > regular_price;


/*5 Identify the paintings whose asking price is less than 50% of its regular price*/

SELECT * 
from product_size
WHERE sale_price < (0.5*regular_price);


/*6 Which canva size costs the most?*/

SELECT ps.size_id,cs.label,max(regular_price) as price
FROM product_size ps
JOIN canvas_size cs
ON ps.size_id = cs.size_id
group by ps.size_id,label 
order by price desc
limit 1;


/*7 Identify the museums with invalid city information in the given dataset*/

SELECT * FROM museum
WHERE city REGEXP '^[0-9]';


/*8 Fetch the top 10 most famous painting subject*/

SELECT count(w.work_id) as total_count, subject
FROM subject s
JOIN work w 
ON s.work_id =w.work_id
group by subject
order by total_count DESC
LIMIT 10;


/*9 How many museums are open every single day?*/

SELECT count(*)
FROM 
(SELECT count(m.museum_id),name 
FROM museum_hours mh
JOIN museum m
ON mh.museum_id = m.museum_id
group by name
having count(m.museum_id) = 7) tc;


/*10)A Which are the top 5 most popular museum? (Popularity is defined based on most no of paintings in a museum)*/

SELECT count(w.work_id) no_paintings, m.museum_id,m.name
FROM museum m 
JOIN work w 
ON m.museum_id = w.museum_id
group by m.museum_id,m.name
order by no_paintings desc
limit 10;

/*11 Who are the top 5 most popular artist? (Popularity is defined based on most no of paintings done by an artist)*/

select a.full_name, a.nationality, count(*) as no_of_painting
FROM artist a
JOIN work w
ON a.artist_id = w.artist_id
group by a.full_name, a.nationality
order by count(*) desc
limit 5

/*12 A Which museum has the most no of most popular painting style?*/

select m.name, w.style, count(*) as no_of_paint
from museum m
JOIN work w
on m.museum_id = w.museum_id
group by m.name, w.style
order by count(*) desc
limit 1;

/*17) Identify the artists whose paintings are displayed in multiple countries*/

select a.full_name, a.style, count(*) as no_of_pain
from artist a
JOIN work w ON a.artist_id= w.artist_id
JOIN museum m ON m.museum_id = w.museum_id
group by a.full_name, a.style
order by count(*) desc
limit 5;
